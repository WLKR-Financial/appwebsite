{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/components/TopBar/components/ProductsDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTheme } from 'react-neu';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Select from 'react-select';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomOption = ({\n  innerProps,\n  value,\n  label\n}) => /*#__PURE__*/_jsxDEV(CustomDropdownOption, { ...innerProps,\n  children: /*#__PURE__*/_jsxDEV(StyledLink, {\n    exact: true,\n    activeClassName: \"active\",\n    to: `/${value}`,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = CustomOption;\n\nconst ProductsDropdown = () => {\n  _s();\n\n  const theme = useTheme();\n  const {\n    pathname\n  } = useLocation();\n  const dropdownSelectStyles = useMemo(() => {\n    const isProductRouteActive = pathname === '/wlkr' || pathname === '/mvi' || pathname === '/bed' || pathname === '/cndl' || pathname === '/data';\n    return {\n      control: styles => ({ ...styles,\n        width: 160,\n        background: 'none',\n        border: 'none'\n      }),\n      singleValue: styles => ({ ...styles,\n        'color': isProductRouteActive ? theme.colors.primary.light : theme.colors.grey[500],\n        'fontWeight': 600,\n        'cursor': 'pointer',\n        '&:hover': {\n          color: isProductRouteActive ? theme.colors.primary.light : theme.colors.grey[600]\n        },\n        'overflow': 'visible'\n      }),\n      menu: styles => ({ ...styles,\n        color: 'black',\n        width: 310,\n        overflow: 'hidden'\n      }),\n      dropdownIndicator: styles => ({ ...styles,\n        'color': isProductRouteActive ? theme.colors.primary.light : theme.colors.grey[500],\n        'cursor': 'pointer',\n        '&:hover': {\n          color: isProductRouteActive ? theme.colors.primary.light : theme.colors.grey[500]\n        }\n      }),\n      indicatorSeparator: () => ({}),\n      indicatorContainer: styles => ({ ...styles,\n        marginLeft: 0,\n        padding: 0\n      })\n    };\n  }, [theme, pathname]);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    isSearchable: false,\n    value: {\n      label: 'Walker Products'\n    },\n    options: [{\n      value: 'wlkr',\n      label: 'Walker Innovation Index'\n    }, {\n      value: 'mvi',\n      label: 'Metaverse Index'\n    }, {\n      value: 'bed',\n      label: 'Bankless BED Index'\n    }, {\n      value: 'data',\n      label: 'Data Economy Index'\n    }, {\n      value: 'gmi',\n      label: 'Bankless GMI Index'\n    }],\n    components: {\n      Option: CustomOption\n    },\n    styles: dropdownSelectStyles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductsDropdown, \"+8cCXn/Qfau4MdR3x29uqtYeZrw=\", false, function () {\n  return [useTheme, useLocation];\n});\n\n_c2 = ProductsDropdown;\nconst CustomDropdownOption = styled.div`\n  width: 200px;\n  margin: 10px;\n  overflow: hidden;\n`;\n_c3 = CustomDropdownOption;\nconst StyledLink = styled(NavLink)`\n  color: ${props => props.theme.colors.grey[500]};\n  font-weight: 700;\n  padding-left: ${props => props.theme.spacing[3]}px;\n  padding-right: ${props => props.theme.spacing[3]}px;\n  text-decoration: none;\n  &:hover {\n    color: ${props => props.theme.colors.grey[600]};\n  }\n  &.active {\n    color: ${props => props.theme.colors.primary.light};\n  }\n`;\n_c4 = StyledLink;\nexport default ProductsDropdown;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomOption\");\n$RefreshReg$(_c2, \"ProductsDropdown\");\n$RefreshReg$(_c3, \"CustomDropdownOption\");\n$RefreshReg$(_c4, \"StyledLink\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/components/TopBar/components/ProductsDropdown.tsx"],"names":["React","useMemo","useTheme","NavLink","useLocation","Select","styled","CustomOption","innerProps","value","label","ProductsDropdown","theme","pathname","dropdownSelectStyles","isProductRouteActive","control","styles","width","background","border","singleValue","colors","primary","light","grey","color","menu","overflow","dropdownIndicator","indicatorSeparator","indicatorContainer","marginLeft","padding","Option","CustomDropdownOption","div","StyledLink","props","spacing"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\n\nimport { useTheme } from 'react-neu'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport Select from 'react-select'\n\nimport styled from 'styled-components'\n\nconst CustomOption = ({ innerProps, value, label }: any) => (\n  <CustomDropdownOption {...innerProps}>\n    <StyledLink exact activeClassName='active' to={`/${value}`}>\n      {label}\n    </StyledLink>\n  </CustomDropdownOption>\n)\n\nconst ProductsDropdown: React.FC = () => {\n  const theme = useTheme()\n  const { pathname } = useLocation()\n\n  const dropdownSelectStyles = useMemo(() => {\n    const isProductRouteActive =\n      pathname === '/wlkr' ||\n      pathname === '/mvi' ||\n      pathname === '/bed' ||\n      pathname === '/cndl' ||\n      pathname === '/data'\n\n    return {\n      control: (styles: any) => ({\n        ...styles,\n        width: 160,\n        background: 'none',\n        border: 'none',\n      }),\n      singleValue: (styles: any) => ({\n        ...styles,\n        'color': isProductRouteActive\n          ? theme.colors.primary.light\n          : theme.colors.grey[500],\n        'fontWeight': 600,\n        'cursor': 'pointer',\n        '&:hover': {\n          color: isProductRouteActive\n            ? theme.colors.primary.light\n            : theme.colors.grey[600],\n        },\n        'overflow': 'visible',\n      }),\n      menu: (styles: any) => ({\n        ...styles,\n        color: 'black',\n        width: 310,\n        overflow: 'hidden',\n      }),\n      dropdownIndicator: (styles: any) => ({\n        ...styles,\n        'color': isProductRouteActive\n          ? theme.colors.primary.light\n          : theme.colors.grey[500],\n        'cursor': 'pointer',\n        '&:hover': {\n          color: isProductRouteActive\n            ? theme.colors.primary.light\n            : theme.colors.grey[500],\n        },\n      }),\n      indicatorSeparator: () => ({}),\n      indicatorContainer: (styles: any) => ({\n        ...styles,\n        marginLeft: 0,\n        padding: 0,\n      }),\n    }\n  }, [theme, pathname])\n\n  return (\n    <Select\n      isSearchable={false}\n      value={{ label: 'Walker Products' } as any}\n      options={[\n        {\n          value: 'wlkr',\n          label: 'Walker Innovation Index',\n        },\n        {\n          value: 'mvi',\n          label: 'Metaverse Index',\n        },\n        {\n          value: 'bed',\n          label: 'Bankless BED Index',\n        },\n        {\n          value: 'data',\n          label: 'Data Economy Index',\n        },\n        {\n          value: 'gmi',\n          label: 'Bankless GMI Index',\n        },\n      ]}\n      components={{\n        Option: CustomOption,\n      }}\n      styles={dropdownSelectStyles}\n    />\n  )\n}\n\nconst CustomDropdownOption = styled.div`\n  width: 200px;\n  margin: 10px;\n  overflow: hidden;\n`\n\nconst StyledLink = styled(NavLink)`\n  color: ${(props) => props.theme.colors.grey[500]};\n  font-weight: 700;\n  padding-left: ${(props) => props.theme.spacing[3]}px;\n  padding-right: ${(props) => props.theme.spacing[3]}px;\n  text-decoration: none;\n  &:hover {\n    color: ${(props) => props.theme.colors.grey[600]};\n  }\n  &.active {\n    color: ${(props) => props.theme.colors.primary.light};\n  }\n`\n\nexport default ProductsDropdown\n"]},"metadata":{},"sourceType":"module"}