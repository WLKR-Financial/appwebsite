{"ast":null,"code":"import { bedTokenAddress, btc2xfliTokenAddress, daiTokenAddress, daiTokenPolygonAddress, dataTokenAddress, dataTokenPolygonAddress, dpiTokenAddress, dpiTokenPolygonAddress, eth2xflipTokenAddress, eth2xfliTokenAddress, gmiTokenAddress, gmiTokenPolygonAddress, iethflipTokenAddress, imaticflipTokenAddress, indexTokenAddress, matic2xflipTokenAddress, mviTokenAddress, mviTokenPolygonAddress, usdcTokenAddress, usdcTokenPolygonAddress, wlkrTokenAddress, // Added WLKR\nwlkrTokenPolygonAddress, // Added WLKR\nwlkrrTokenAddress, // Added WLKRR\nwlkrrTokenPolygonAddress, // Added WLKRR\ncndlTokenAddress, // Added CNDL\ncndlTokenPolygonAddress, // Added CNDL\nwethTokenPolygonAddress } from './ethContractAddresses';\nexport const tokenInfo = {\n  ethfli: {\n    address: eth2xfliTokenAddress,\n    decimals: 18\n  },\n  btcfli: {\n    address: btc2xfliTokenAddress,\n    decimals: 18\n  },\n  dpi: {\n    address: dpiTokenAddress,\n    decimals: 18\n  },\n  mvi: {\n    address: mviTokenAddress,\n    decimals: 18\n  },\n  bed: {\n    address: bedTokenAddress,\n    decimals: 18\n  },\n  gmi: {\n    address: gmiTokenAddress,\n    decimals: 18\n  },\n  data: {\n    address: dataTokenAddress,\n    decimals: 18\n  },\n  wlkr: {\n    address: wlkrTokenAddress,\n    // Added WLKR\n    decimals: 18\n  },\n  wlkrr: {\n    address: wlkrrTokenAddress,\n    // Added WLKRR\n    decimals: 18\n  },\n  cndl: {\n    address: cndlTokenAddress,\n    // Added CNDL\n    decimals: 18\n  },\n  index: {\n    address: indexTokenAddress,\n    decimals: 18\n  },\n  DAI: {\n    address: daiTokenAddress,\n    decimals: 18\n  },\n  USDC: {\n    address: usdcTokenAddress,\n    decimals: 6\n  },\n  ETH: {\n    address: 'ETH',\n    decimals: 18\n  }\n};\nexport const polygonTokenInfo = {\n  'data': {\n    address: dataTokenPolygonAddress,\n    decimals: 18\n  },\n  'dpi': {\n    address: dpiTokenPolygonAddress,\n    decimals: 18\n  },\n  'wlkr': {\n    address: wlkrTokenPolygonAddress,\n    // Added WLKR\n    decimals: 18\n  },\n  'wlkrr': {\n    address: wlkrrTokenPolygonAddress,\n    // Added WLKRR\n    decimals: 18\n  },\n  'cndl': {\n    address: cndlTokenPolygonAddress,\n    // Added CNDL\n    decimals: 18\n  },\n  'gmi': {\n    address: gmiTokenPolygonAddress,\n    decimals: 18\n  },\n  'mvi': {\n    address: mviTokenPolygonAddress,\n    decimals: 18\n  },\n  'DAI': {\n    address: daiTokenPolygonAddress,\n    decimals: 18\n  },\n  'USDC': {\n    address: usdcTokenPolygonAddress,\n    decimals: 6\n  },\n  'ETH': {\n    address: wethTokenPolygonAddress,\n    decimals: 18\n  },\n  'eth2x-fli-p': {\n    address: eth2xflipTokenAddress,\n    decimals: 18\n  },\n  'ieth-fli-p': {\n    address: iethflipTokenAddress,\n    decimals: 18\n  },\n  'matic2x-fli-p': {\n    address: matic2xflipTokenAddress,\n    decimals: 18\n  },\n  'imatic-fli-p': {\n    address: imaticflipTokenAddress,\n    decimals: 18\n  }\n};","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/constants/tokenInfo.ts"],"names":["bedTokenAddress","btc2xfliTokenAddress","daiTokenAddress","daiTokenPolygonAddress","dataTokenAddress","dataTokenPolygonAddress","dpiTokenAddress","dpiTokenPolygonAddress","eth2xflipTokenAddress","eth2xfliTokenAddress","gmiTokenAddress","gmiTokenPolygonAddress","iethflipTokenAddress","imaticflipTokenAddress","indexTokenAddress","matic2xflipTokenAddress","mviTokenAddress","mviTokenPolygonAddress","usdcTokenAddress","usdcTokenPolygonAddress","wlkrTokenAddress","wlkrTokenPolygonAddress","wlkrrTokenAddress","wlkrrTokenPolygonAddress","cndlTokenAddress","cndlTokenPolygonAddress","wethTokenPolygonAddress","tokenInfo","ethfli","address","decimals","btcfli","dpi","mvi","bed","gmi","data","wlkr","wlkrr","cndl","index","DAI","USDC","ETH","polygonTokenInfo"],"mappings":"AAAA,SACEA,eADF,EAEEC,oBAFF,EAGEC,eAHF,EAIEC,sBAJF,EAKEC,gBALF,EAMEC,uBANF,EAOEC,eAPF,EAQEC,sBARF,EASEC,qBATF,EAUEC,oBAVF,EAWEC,eAXF,EAYEC,sBAZF,EAaEC,oBAbF,EAcEC,sBAdF,EAeEC,iBAfF,EAgBEC,uBAhBF,EAiBEC,eAjBF,EAkBEC,sBAlBF,EAmBEC,gBAnBF,EAoBEC,uBApBF,EAqBEC,gBArBF,EAqBoB;AAClBC,uBAtBF,EAsB2B;AACzBC,iBAvBF,EAuBqB;AACnBC,wBAxBF,EAwB4B;AAC1BC,gBAzBF,EAyBoB;AAClBC,uBA1BF,EA0B2B;AACzBC,uBA3BF,QA4BO,wBA5BP;AA8BA,OAAO,MAAMC,SAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAEpB,oBADH;AAENqB,IAAAA,QAAQ,EAAE;AAFJ,GADoB;AAK5BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,OAAO,EAAE5B,oBADH;AAEN6B,IAAAA,QAAQ,EAAE;AAFJ,GALoB;AAS5BE,EAAAA,GAAG,EAAE;AACHH,IAAAA,OAAO,EAAEvB,eADN;AAEHwB,IAAAA,QAAQ,EAAE;AAFP,GATuB;AAa5BG,EAAAA,GAAG,EAAE;AACHJ,IAAAA,OAAO,EAAEb,eADN;AAEHc,IAAAA,QAAQ,EAAE;AAFP,GAbuB;AAiB5BI,EAAAA,GAAG,EAAE;AACHL,IAAAA,OAAO,EAAE7B,eADN;AAEH8B,IAAAA,QAAQ,EAAE;AAFP,GAjBuB;AAqB5BK,EAAAA,GAAG,EAAE;AACHN,IAAAA,OAAO,EAAEnB,eADN;AAEHoB,IAAAA,QAAQ,EAAE;AAFP,GArBuB;AAyB5BM,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAEzB,gBADL;AAEJ0B,IAAAA,QAAQ,EAAE;AAFN,GAzBsB;AA6B5BO,EAAAA,IAAI,EAAE;AACJR,IAAAA,OAAO,EAAET,gBADL;AACuB;AAC3BU,IAAAA,QAAQ,EAAE;AAFN,GA7BsB;AAiC5BQ,EAAAA,KAAK,EAAE;AACLT,IAAAA,OAAO,EAAEP,iBADJ;AACuB;AAC5BQ,IAAAA,QAAQ,EAAE;AAFL,GAjCqB;AAqC5BS,EAAAA,IAAI,EAAE;AACJV,IAAAA,OAAO,EAAEL,gBADL;AACuB;AAC3BM,IAAAA,QAAQ,EAAE;AAFN,GArCsB;AAyC5BU,EAAAA,KAAK,EAAE;AACLX,IAAAA,OAAO,EAAEf,iBADJ;AAELgB,IAAAA,QAAQ,EAAE;AAFL,GAzCqB;AA6C5BW,EAAAA,GAAG,EAAE;AACHZ,IAAAA,OAAO,EAAE3B,eADN;AAEH4B,IAAAA,QAAQ,EAAE;AAFP,GA7CuB;AAiD5BY,EAAAA,IAAI,EAAE;AACJb,IAAAA,OAAO,EAAEX,gBADL;AAEJY,IAAAA,QAAQ,EAAE;AAFN,GAjDsB;AAqD5Ba,EAAAA,GAAG,EAAE;AACHd,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AArDuB,CAAvB;AA0DP,OAAO,MAAMc,gBAAqB,GAAG;AACnC,UAAQ;AACNf,IAAAA,OAAO,EAAExB,uBADH;AAENyB,IAAAA,QAAQ,EAAE;AAFJ,GAD2B;AAKnC,SAAO;AACLD,IAAAA,OAAO,EAAEtB,sBADJ;AAELuB,IAAAA,QAAQ,EAAE;AAFL,GAL4B;AASnC,UAAQ;AACND,IAAAA,OAAO,EAAER,uBADH;AAC4B;AAClCS,IAAAA,QAAQ,EAAE;AAFJ,GAT2B;AAanC,WAAS;AACPD,IAAAA,OAAO,EAAEN,wBADF;AAC4B;AACnCO,IAAAA,QAAQ,EAAE;AAFH,GAb0B;AAiBnC,UAAQ;AACND,IAAAA,OAAO,EAAEJ,uBADH;AAC4B;AAClCK,IAAAA,QAAQ,EAAE;AAFJ,GAjB2B;AAqBnC,SAAO;AACLD,IAAAA,OAAO,EAAElB,sBADJ;AAELmB,IAAAA,QAAQ,EAAE;AAFL,GArB4B;AAyBnC,SAAO;AACLD,IAAAA,OAAO,EAAEZ,sBADJ;AAELa,IAAAA,QAAQ,EAAE;AAFL,GAzB4B;AA6BnC,SAAO;AACLD,IAAAA,OAAO,EAAE1B,sBADJ;AAEL2B,IAAAA,QAAQ,EAAE;AAFL,GA7B4B;AAiCnC,UAAQ;AACND,IAAAA,OAAO,EAAEV,uBADH;AAENW,IAAAA,QAAQ,EAAE;AAFJ,GAjC2B;AAqCnC,SAAO;AACLD,IAAAA,OAAO,EAAEH,uBADJ;AAELI,IAAAA,QAAQ,EAAE;AAFL,GArC4B;AAyCnC,iBAAe;AACbD,IAAAA,OAAO,EAAErB,qBADI;AAEbsB,IAAAA,QAAQ,EAAE;AAFG,GAzCoB;AA6CnC,gBAAc;AACZD,IAAAA,OAAO,EAAEjB,oBADG;AAEZkB,IAAAA,QAAQ,EAAE;AAFE,GA7CqB;AAiDnC,mBAAiB;AACfD,IAAAA,OAAO,EAAEd,uBADM;AAEfe,IAAAA,QAAQ,EAAE;AAFK,GAjDkB;AAqDnC,kBAAgB;AACdD,IAAAA,OAAO,EAAEhB,sBADK;AAEdiB,IAAAA,QAAQ,EAAE;AAFI;AArDmB,CAA9B","sourcesContent":["import {\n  bedTokenAddress,\n  btc2xfliTokenAddress,\n  daiTokenAddress,\n  daiTokenPolygonAddress,\n  dataTokenAddress,\n  dataTokenPolygonAddress,\n  dpiTokenAddress,\n  dpiTokenPolygonAddress,\n  eth2xflipTokenAddress,\n  eth2xfliTokenAddress,\n  gmiTokenAddress,\n  gmiTokenPolygonAddress,\n  iethflipTokenAddress,\n  imaticflipTokenAddress,\n  indexTokenAddress,\n  matic2xflipTokenAddress,\n  mviTokenAddress,\n  mviTokenPolygonAddress,\n  usdcTokenAddress,\n  usdcTokenPolygonAddress,\n  wlkrTokenAddress, // Added WLKR\n  wlkrTokenPolygonAddress, // Added WLKR\n  wlkrrTokenAddress, // Added WLKRR\n  wlkrrTokenPolygonAddress, // Added WLKRR\n  cndlTokenAddress, // Added CNDL\n  cndlTokenPolygonAddress, // Added CNDL\n  wethTokenPolygonAddress,\n} from './ethContractAddresses'\n\nexport const tokenInfo: any = {\n  ethfli: {\n    address: eth2xfliTokenAddress,\n    decimals: 18,\n  },\n  btcfli: {\n    address: btc2xfliTokenAddress,\n    decimals: 18,\n  },\n  dpi: {\n    address: dpiTokenAddress,\n    decimals: 18,\n  },\n  mvi: {\n    address: mviTokenAddress,\n    decimals: 18,\n  },\n  bed: {\n    address: bedTokenAddress,\n    decimals: 18,\n  },\n  gmi: {\n    address: gmiTokenAddress,\n    decimals: 18,\n  },\n  data: {\n    address: dataTokenAddress,\n    decimals: 18,\n  },\n  wlkr: {\n    address: wlkrTokenAddress, // Added WLKR\n    decimals: 18,\n  },\n  wlkrr: {\n    address: wlkrrTokenAddress, // Added WLKRR\n    decimals: 18,\n  },\n  cndl: {\n    address: cndlTokenAddress, // Added CNDL\n    decimals: 18,\n  },\n  index: {\n    address: indexTokenAddress,\n    decimals: 18,\n  },\n  DAI: {\n    address: daiTokenAddress,\n    decimals: 18,\n  },\n  USDC: {\n    address: usdcTokenAddress,\n    decimals: 6,\n  },\n  ETH: {\n    address: 'ETH',\n    decimals: 18,\n  },\n}\nexport const polygonTokenInfo: any = {\n  'data': {\n    address: dataTokenPolygonAddress,\n    decimals: 18,\n  },\n  'dpi': {\n    address: dpiTokenPolygonAddress,\n    decimals: 18,\n  },\n  'wlkr': {\n    address: wlkrTokenPolygonAddress, // Added WLKR\n    decimals: 18,\n  },\n  'wlkrr': {\n    address: wlkrrTokenPolygonAddress, // Added WLKRR\n    decimals: 18,\n  },\n  'cndl': {\n    address: cndlTokenPolygonAddress, // Added CNDL\n    decimals: 18,\n  },\n  'gmi': {\n    address: gmiTokenPolygonAddress,\n    decimals: 18,\n  },\n  'mvi': {\n    address: mviTokenPolygonAddress,\n    decimals: 18,\n  },\n  'DAI': {\n    address: daiTokenPolygonAddress,\n    decimals: 18,\n  },\n  'USDC': {\n    address: usdcTokenPolygonAddress,\n    decimals: 6,\n  },\n  'ETH': {\n    address: wethTokenPolygonAddress,\n    decimals: 18,\n  },\n  'eth2x-fli-p': {\n    address: eth2xflipTokenAddress,\n    decimals: 18,\n  },\n  'ieth-fli-p': {\n    address: iethflipTokenAddress,\n    decimals: 18,\n  },\n  'matic2x-fli-p': {\n    address: matic2xflipTokenAddress,\n    decimals: 18,\n  },\n  'imatic-fli-p': {\n    address: imaticflipTokenAddress,\n    decimals: 18,\n  },\n}\n"]},"metadata":{},"sourceType":"module"}