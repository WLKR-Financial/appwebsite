{"ast":null,"code":"import bedBorderLogo from 'assets/bed-border.png';\nimport dataLogo from 'assets/data-logo.png';\nimport gmiLogo from 'assets/gmilogo.png';\nimport wlkrinnovationLogo from 'assets/wlkrlogo.png'; // Added WLKR\n\nimport wlkrrLogo from 'assets/wlkrlogo.png'; // Added WLKRR\n\nimport cndlLogo from 'assets/wlkrlogo.png'; // Added CNDL\n\nimport iethflipLogo from \"assets/iethfliplogo.svg\";\nimport imaticflipLogo from \"assets/imaticflilogo.svg\";\nimport indexLogo from 'assets/index-token.png';\nimport maticflipLogo from \"assets/maticflilogo.svg\";\nimport * as tokenAddresses from 'constants/ethContractAddresses';\nexport const dpiTokenImage = 'https://index-dao.s3.amazonaws.com/defi_pulse_index_set.svg';\nexport const DefiPulseIndex = {\n  name: 'DeFi Pulse Index',\n  symbol: 'DPI',\n  address: tokenAddresses.dpiTokenAddress,\n  image: dpiTokenImage,\n  polygonAddress: tokenAddresses.dpiTokenPolygonAddress,\n  coingeckoId: 'defipulse-index',\n  tokensetsId: 'dpi',\n  tokenSelector: 'dpi',\n  fees: {\n    streamingFee: '0.95%'\n  }\n};\nexport const IndexToken = {\n  name: 'Index Token',\n  symbol: 'INDEX',\n  address: tokenAddresses.indexTokenAddress,\n  polygonAddress: tokenAddresses.indexTokenPolygonAddress,\n  image: indexLogo,\n  coingeckoId: 'index-cooperative',\n  tokensetsId: 'index',\n  tokenSelector: 'index',\n  fees: undefined\n};\nexport const WalkerToken = {\n  // Added WLKRR\n  name: 'Walker Token',\n  symbol: 'WLKRR',\n  address: tokenAddresses.wlkrrTokenAddress,\n  polygonAddress: tokenAddresses.wlkrrTokenPolygonAddress,\n  image: wlkrrLogo,\n  coingeckoId: 'wlkrr',\n  tokensetsId: 'wlkrr',\n  tokenSelector: 'wlkrr',\n  fees: undefined\n};\nexport const CandleToken = {\n  name: 'Candle Token',\n  symbol: 'CNDL',\n  address: tokenAddresses.cndlTokenAddress,\n  polygonAddress: tokenAddresses.cndlTokenPolygonAddress,\n  image: cndlLogo,\n  coingeckoId: 'candle',\n  tokensetsId: 'candle',\n  tokenSelector: 'candle',\n  fees: undefined\n};\nexport const Ethereum2xFlexibleLeverageIndex = {\n  name: 'Ethereum 2x Flexible Leverage Index',\n  symbol: 'ETH2x-FLI',\n  address: tokenAddresses.eth2xfliTokenAddress,\n  polygonAddress: undefined,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/eth2x_fli.svg',\n  coingeckoId: 'eth-2x-flexible-leverage-index',\n  tokensetsId: 'ethfli',\n  tokenSelector: 'ethfli',\n  fees: {\n    streamingFee: '1.95%'\n  }\n};\nexport const Ethereum2xFLIP = {\n  name: 'Ethereum 2x FLI Polygon',\n  symbol: 'ETH2X-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.eth2xflipTokenAddress,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/eth2x_fli.svg',\n  coingeckoId: 'index-coop-eth-2x-flexible-leverage-index-polygon',\n  tokensetsId: 'eth2x-fli-p',\n  tokenSelector: 'eth2x-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%'\n  }\n};\nexport const MetaverseIndex = {\n  name: 'Metaverse Index',\n  symbol: 'MVI',\n  address: tokenAddresses.mviTokenAddress,\n  polygonAddress: tokenAddresses.mviTokenPolygonAddress,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/mvi.svg',\n  coingeckoId: 'metaverse-index',\n  tokensetsId: 'mvi',\n  tokenSelector: 'mvi',\n  fees: {\n    streamingFee: '0.95%'\n  }\n};\nexport const Bitcoin2xFlexibleLeverageIndex = {\n  name: 'Bitcoin 2x Flexible Leverage Index',\n  symbol: 'BTC2x-FLI',\n  address: tokenAddresses.btc2xfliTokenAddress,\n  polygonAddress: undefined,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/fli_btc.svg',\n  coingeckoId: 'btc-2x-flexible-leverage-index',\n  tokensetsId: 'btcfli',\n  tokenSelector: 'btcfli',\n  fees: {\n    streamingFee: '1.95%'\n  }\n};\nexport const BedIndex = {\n  name: 'Bankless BED Index',\n  symbol: 'BED',\n  address: tokenAddresses.bedTokenAddress,\n  polygonAddress: undefined,\n  image: bedBorderLogo,\n  coingeckoId: 'bankless-bed-index',\n  tokensetsId: 'bed',\n  tokenSelector: 'bed',\n  fees: {\n    streamingFee: '0.25%'\n  }\n};\nexport const DataIndex = {\n  name: 'Data Economy Index',\n  symbol: 'DATA',\n  address: tokenAddresses.dataTokenAddress,\n  polygonAddress: tokenAddresses.dataTokenPolygonAddress,\n  image: dataLogo,\n  coingeckoId: 'data-economy-index',\n  tokensetsId: 'data',\n  tokenSelector: 'data',\n  fees: {\n    streamingFee: '0.95%'\n  }\n};\nexport const GmiIndex = {\n  name: 'Bankless DeFi Innovation Index',\n  symbol: 'GMI',\n  address: tokenAddresses.gmiTokenAddress,\n  polygonAddress: tokenAddresses.gmiTokenPolygonAddress,\n  image: gmiLogo,\n  coingeckoId: 'bankless-defi-innovation-index',\n  tokensetsId: 'gmi',\n  tokenSelector: 'gmi',\n  fees: {\n    streamingFee: '1.95%'\n  }\n};\nexport const Matic2xFLIP = {\n  name: 'MATIC 2x Flexible Leverage Index',\n  symbol: 'MATIC2x-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.matic2xflipTokenAddress,\n  image: maticflipLogo,\n  coingeckoId: 'index-coop-matic-2x-flexible-leverage-index',\n  tokensetsId: 'matic2x-fli-p',\n  tokenSelector: 'matic2x-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%'\n  }\n};\nexport const IMaticFLIP = {\n  name: 'Inverse MATIC Flexible Leverage Index',\n  symbol: 'iMATIC-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.imaticflipTokenAddress,\n  image: imaticflipLogo,\n  coingeckoId: 'index-coop-inverse-matic-flexible-leverage-index',\n  tokensetsId: 'imatic-fli-p',\n  tokenSelector: 'imatic-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%'\n  }\n};\nexport const WLKRInnovation = {\n  // Added WLKR\n  name: 'Walker Innovation',\n  symbol: 'WLKR',\n  address: tokenAddresses.wlkrTokenAddress,\n  polygonAddress: tokenAddresses.wlkrTokenPolygonAddress,\n  image: wlkrinnovationLogo,\n  coingeckoId: 'wlkr',\n  tokensetsId: 'wlkrinnovation',\n  tokenSelector: 'wlkrinnovation',\n  fees: {\n    streamingFee: '2%',\n    mintRedeemFee: '0.1%'\n  }\n};\nexport const IEthereumFLIP = {\n  name: 'Inverse ETH Flexible Leverage Index',\n  symbol: 'iETH-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.iethflipTokenAddress,\n  image: iethflipLogo,\n  coingeckoId: 'index-coop-inverse-eth-flexible-leverage-index',\n  tokensetsId: 'ieth-fli-p',\n  tokenSelector: 'ieth-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%'\n  }\n};\nexport const productTokensBySymbol = {\n  'ETH2x-FLI': Ethereum2xFlexibleLeverageIndex,\n  'ETH2x-FLI-P': Ethereum2xFLIP,\n  'BTC2x-FLI': Bitcoin2xFlexibleLeverageIndex,\n  'BED': BedIndex,\n  'DATA': DataIndex,\n  'WLKR': WLKRInnovation,\n  // Added WLKR\n  'WLKRR': WalkerToken,\n  // Added WLKRR\n  'CNDL': CandleToken,\n  // Added CNDL\n  'GMI': GmiIndex\n};\nconst indexNames = [DefiPulseIndex, MetaverseIndex, Ethereum2xFlexibleLeverageIndex, Ethereum2xFLIP, IndexToken, Bitcoin2xFlexibleLeverageIndex, BedIndex, DataIndex, WLKRInnovation, // Added WLKR\nWalkerToken, // Added WLKRR\nCandleToken, // Added CNDL\nGmiIndex];\nexport default indexNames;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/constants/productTokens.ts"],"names":["bedBorderLogo","dataLogo","gmiLogo","wlkrinnovationLogo","wlkrrLogo","cndlLogo","indexLogo","tokenAddresses","dpiTokenImage","DefiPulseIndex","name","symbol","address","dpiTokenAddress","image","polygonAddress","dpiTokenPolygonAddress","coingeckoId","tokensetsId","tokenSelector","fees","streamingFee","IndexToken","indexTokenAddress","indexTokenPolygonAddress","undefined","WalkerToken","wlkrrTokenAddress","wlkrrTokenPolygonAddress","CandleToken","cndlTokenAddress","cndlTokenPolygonAddress","Ethereum2xFlexibleLeverageIndex","eth2xfliTokenAddress","Ethereum2xFLIP","eth2xflipTokenAddress","mintRedeemFee","MetaverseIndex","mviTokenAddress","mviTokenPolygonAddress","Bitcoin2xFlexibleLeverageIndex","btc2xfliTokenAddress","BedIndex","bedTokenAddress","DataIndex","dataTokenAddress","dataTokenPolygonAddress","GmiIndex","gmiTokenAddress","gmiTokenPolygonAddress","Matic2xFLIP","matic2xflipTokenAddress","maticflipLogo","IMaticFLIP","imaticflipTokenAddress","imaticflipLogo","WLKRInnovation","wlkrTokenAddress","wlkrTokenPolygonAddress","IEthereumFLIP","iethflipTokenAddress","iethflipLogo","productTokensBySymbol","indexNames"],"mappings":"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","sourcesContent":["import bedBorderLogo from 'assets/bed-border.png'\nimport dataLogo from 'assets/data-logo.png'\nimport gmiLogo from 'assets/gmilogo.png'\nimport wlkrinnovationLogo from 'assets/wlkrlogo.png' // Added WLKR\nimport wlkrrLogo from 'assets/wlkrlogo.png' // Added WLKRR\nimport cndlLogo from 'assets/wlkrlogo.png' // Added CNDL\nimport iethflipLogo from 'assets/iethfliplogo.svg'\nimport imaticflipLogo from 'assets/imaticflilogo.svg'\nimport indexLogo from 'assets/index-token.png'\nimport maticflipLogo from 'assets/maticflilogo.svg'\nimport * as tokenAddresses from 'constants/ethContractAddresses'\n\nexport const dpiTokenImage =\n  'https://index-dao.s3.amazonaws.com/defi_pulse_index_set.svg'\nexport interface ProductToken {\n  name: string\n  symbol: string\n  address: string | undefined\n  polygonAddress: string | undefined\n  image: string\n  coingeckoId: string\n  tokensetsId: string\n  tokenSelector: string\n  fees: { streamingFee: string; mintRedeemFee?: string } | undefined\n}\n\nexport const DefiPulseIndex: ProductToken = {\n  name: 'DeFi Pulse Index',\n  symbol: 'DPI',\n  address: tokenAddresses.dpiTokenAddress,\n  image: dpiTokenImage,\n  polygonAddress: tokenAddresses.dpiTokenPolygonAddress,\n  coingeckoId: 'defipulse-index',\n  tokensetsId: 'dpi',\n  tokenSelector: 'dpi',\n  fees: {\n    streamingFee: '0.95%',\n  },\n}\n\nexport const IndexToken: ProductToken = {\n  name: 'Index Token',\n  symbol: 'INDEX',\n  address: tokenAddresses.indexTokenAddress,\n  polygonAddress: tokenAddresses.indexTokenPolygonAddress,\n  image: indexLogo,\n  coingeckoId: 'index-cooperative',\n  tokensetsId: 'index',\n  tokenSelector: 'index',\n  fees: undefined,\n}\n\nexport const WalkerToken: ProductToken = { // Added WLKRR\n  name: 'Walker Token',\n  symbol: 'WLKRR',\n  address: tokenAddresses.wlkrrTokenAddress,\n  polygonAddress: tokenAddresses.wlkrrTokenPolygonAddress,\n  image: wlkrrLogo,\n  coingeckoId: 'wlkrr',\n  tokensetsId: 'wlkrr',\n  tokenSelector: 'wlkrr',\n  fees: undefined,\n}\n\nexport const CandleToken: ProductToken = {\n  name: 'Candle Token',\n  symbol: 'CNDL',\n  address: tokenAddresses.cndlTokenAddress,\n  polygonAddress: tokenAddresses.cndlTokenPolygonAddress,\n  image: cndlLogo,\n  coingeckoId: 'candle',\n  tokensetsId: 'candle',\n  tokenSelector: 'candle',\n  fees: undefined,\n}\n\nexport const Ethereum2xFlexibleLeverageIndex: ProductToken = {\n  name: 'Ethereum 2x Flexible Leverage Index',\n  symbol: 'ETH2x-FLI',\n  address: tokenAddresses.eth2xfliTokenAddress,\n  polygonAddress: undefined,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/eth2x_fli.svg',\n  coingeckoId: 'eth-2x-flexible-leverage-index',\n  tokensetsId: 'ethfli',\n  tokenSelector: 'ethfli',\n  fees: {\n    streamingFee: '1.95%',\n  },\n}\n\nexport const Ethereum2xFLIP: ProductToken = {\n  name: 'Ethereum 2x FLI Polygon',\n  symbol: 'ETH2X-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.eth2xflipTokenAddress,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/eth2x_fli.svg',\n  coingeckoId: 'index-coop-eth-2x-flexible-leverage-index-polygon',\n  tokensetsId: 'eth2x-fli-p',\n  tokenSelector: 'eth2x-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%',\n  },\n}\n\nexport const MetaverseIndex: ProductToken = {\n  name: 'Metaverse Index',\n  symbol: 'MVI',\n  address: tokenAddresses.mviTokenAddress,\n  polygonAddress: tokenAddresses.mviTokenPolygonAddress,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/mvi.svg',\n  coingeckoId: 'metaverse-index',\n  tokensetsId: 'mvi',\n  tokenSelector: 'mvi',\n  fees: {\n    streamingFee: '0.95%',\n  },\n}\n\nexport const Bitcoin2xFlexibleLeverageIndex: ProductToken = {\n  name: 'Bitcoin 2x Flexible Leverage Index',\n  symbol: 'BTC2x-FLI',\n  address: tokenAddresses.btc2xfliTokenAddress,\n  polygonAddress: undefined,\n  image: 'https://set-core.s3.amazonaws.com/img/portfolios/fli_btc.svg',\n  coingeckoId: 'btc-2x-flexible-leverage-index',\n  tokensetsId: 'btcfli',\n  tokenSelector: 'btcfli',\n  fees: {\n    streamingFee: '1.95%',\n  },\n}\n\nexport const BedIndex: ProductToken = {\n  name: 'Bankless BED Index',\n  symbol: 'BED',\n  address: tokenAddresses.bedTokenAddress,\n  polygonAddress: undefined,\n  image: bedBorderLogo,\n  coingeckoId: 'bankless-bed-index',\n  tokensetsId: 'bed',\n  tokenSelector: 'bed',\n  fees: {\n    streamingFee: '0.25%',\n  },\n}\n\nexport const DataIndex: ProductToken = {\n  name: 'Data Economy Index',\n  symbol: 'DATA',\n  address: tokenAddresses.dataTokenAddress,\n  polygonAddress: tokenAddresses.dataTokenPolygonAddress,\n  image: dataLogo,\n  coingeckoId: 'data-economy-index',\n  tokensetsId: 'data',\n  tokenSelector: 'data',\n  fees: {\n    streamingFee: '0.95%',\n  },\n}\n\nexport const GmiIndex: ProductToken = {\n  name: 'Bankless DeFi Innovation Index',\n  symbol: 'GMI',\n  address: tokenAddresses.gmiTokenAddress,\n  polygonAddress: tokenAddresses.gmiTokenPolygonAddress,\n  image: gmiLogo,\n  coingeckoId: 'bankless-defi-innovation-index',\n  tokensetsId: 'gmi',\n  tokenSelector: 'gmi',\n  fees: {\n    streamingFee: '1.95%',\n  },\n}\n\nexport const Matic2xFLIP: ProductToken = {\n  name: 'MATIC 2x Flexible Leverage Index',\n  symbol: 'MATIC2x-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.matic2xflipTokenAddress,\n  image: maticflipLogo,\n  coingeckoId: 'index-coop-matic-2x-flexible-leverage-index',\n  tokensetsId: 'matic2x-fli-p',\n  tokenSelector: 'matic2x-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%',\n  },\n}\n\nexport const IMaticFLIP: ProductToken = {\n  name: 'Inverse MATIC Flexible Leverage Index',\n  symbol: 'iMATIC-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.imaticflipTokenAddress,\n  image: imaticflipLogo,\n  coingeckoId: 'index-coop-inverse-matic-flexible-leverage-index',\n  tokensetsId: 'imatic-fli-p',\n  tokenSelector: 'imatic-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%',\n  },\n}\n\nexport const WLKRInnovation: ProductToken = {     // Added WLKR\n  name: 'Walker Innovation',\n  symbol: 'WLKR',\n  address: tokenAddresses.wlkrTokenAddress,\n  polygonAddress: tokenAddresses.wlkrTokenPolygonAddress,\n  image: wlkrinnovationLogo,\n  coingeckoId: 'wlkr',\n  tokensetsId: 'wlkrinnovation',\n  tokenSelector: 'wlkrinnovation',\n  fees: {\n    streamingFee: '2%',\n    mintRedeemFee: '0.1%',\n  },\n}\n\n\nexport const IEthereumFLIP: ProductToken = {\n  name: 'Inverse ETH Flexible Leverage Index',\n  symbol: 'iETH-FLI-P',\n  address: undefined,\n  polygonAddress: tokenAddresses.iethflipTokenAddress,\n  image: iethflipLogo,\n  coingeckoId: 'index-coop-inverse-eth-flexible-leverage-index',\n  tokensetsId: 'ieth-fli-p',\n  tokenSelector: 'ieth-fli-p',\n  fees: {\n    streamingFee: '1.95%',\n    mintRedeemFee: '0.1%',\n  },\n}\n\nexport const productTokensBySymbol = {\n  'ETH2x-FLI': Ethereum2xFlexibleLeverageIndex,\n  'ETH2x-FLI-P': Ethereum2xFLIP,\n  'BTC2x-FLI': Bitcoin2xFlexibleLeverageIndex,\n  'BED': BedIndex,\n  'DATA': DataIndex,\n  'WLKR': WLKRInnovation, // Added WLKR\n  'WLKRR': WalkerToken, // Added WLKRR\n  'CNDL': CandleToken, // Added CNDL\n  'GMI': GmiIndex,\n}\n\nconst indexNames = [\n  DefiPulseIndex,\n  MetaverseIndex,\n  Ethereum2xFlexibleLeverageIndex,\n  Ethereum2xFLIP,\n  IndexToken,\n  Bitcoin2xFlexibleLeverageIndex,\n  BedIndex,\n  DataIndex,\n  WLKRInnovation, // Added WLKR\n  WalkerToken, // Added WLKRR\n  CandleToken, // Added CNDL\n  GmiIndex,\n]\n\nexport default indexNames\n"]},"metadata":{},"sourceType":"module"}