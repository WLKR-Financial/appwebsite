{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/components/ProductPage/ProductDataUI.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Container } from 'react-neu';\nimport { useHistory } from 'react-router-dom';\nimport { BuySellWrapper } from 'components/BuySell';\nimport BuySellDisabled from 'components/BuySell/BuySellDisabled';\nimport MarketData from 'components/MarketData';\nimport Page from 'components/Page';\nimport { IndexComponentsTable, PriceChanges, ProductPageContent, ProductPageHeader, TokenStats, WalletBalance } from 'components/ProductPage';\nimport useChainData from 'hooks/useChainData';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { MAINNET_CHAIN_DATA, POLYGON_CHAIN_DATA } from 'utils/connectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductDataUI = ({\n  tokenDataProps,\n  children\n}) => {\n  _s();\n\n  const tokenData = tokenDataProps;\n  const [, setReferral] = useLocalStorage('referral', '');\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const value = params.get('referral');\n  const {\n    chain\n  } = useChainData();\n  useEffect(() => {\n    if (value) setReferral(value);\n  }, [value, setReferral]);\n\n  const netAssetValueReducer = (netAssetValue, component) => {\n    return netAssetValue + (parseFloat(component.totalPriceUsd) || 0);\n  };\n\n  const getNetAssetValue = () => {\n    return tokenData.components ? tokenData.components.reduce(netAssetValueReducer, 0) : 0;\n  };\n  /**\n   * determines if the token is available on the current chain\n   */\n\n\n  const isAvailableOnCurrentChain = () => {\n    return chain.chainId === POLYGON_CHAIN_DATA.chainId && tokenData.token.polygonAddress && tokenData.token.polygonAddress.length > 0 || chain.chainId === MAINNET_CHAIN_DATA.chainId && tokenData.token.address && tokenData.token.address.length > 0;\n  };\n  /**\n   * determines whether or not to show BuySellWrapper for current token/chain combo\n   * @returns\n   */\n\n\n  const getBuySellWrapper = () => {\n    if (isAvailableOnCurrentChain()) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BuySellWrapper, {\n        tokenId: tokenData.token.tokenSelector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(BuySellDisabled, {\n      tokenData: tokenData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ProductPageHeader, {\n        children: [/*#__PURE__*/_jsxDEV(MarketData, {\n          tokenData: tokenData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), getBuySellWrapper()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductPageContent, {\n        children: [tokenData.token.symbol !== IndexToken.symbol && /*#__PURE__*/_jsxDEV(TokenStats, {\n          latestVolume: tokenData.latestVolume,\n          latestMarketCap: tokenData.latestMarketCap,\n          fees: tokenData.token.fees,\n          supplyCap: tokenData.supplyCap,\n          netAssetValue: getNetAssetValue(),\n          currentSupply: tokenData.currentSupply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WalletBalance, {\n          token: tokenData.token,\n          latestPrice: tokenData.latestPrice,\n          currentBalance: tokenData.balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PriceChanges, {\n          prices: tokenData.prices,\n          hourlyPrices: tokenData.hourlyPrices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), tokenData.components && /*#__PURE__*/_jsxDEV(IndexComponentsTable, {\n          components: tokenData.components\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductDataUI, \"KSPBMxf9JgK6szpU3mA+r2GnOsQ=\", false, function () {\n  return [useLocalStorage, useHistory, useChainData];\n});\n\n_c = ProductDataUI;\nexport default ProductDataUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDataUI\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/components/ProductPage/ProductDataUI.tsx"],"names":["React","useEffect","Container","useHistory","BuySellWrapper","BuySellDisabled","MarketData","Page","IndexComponentsTable","PriceChanges","ProductPageContent","ProductPageHeader","TokenStats","WalletBalance","useChainData","useLocalStorage","MAINNET_CHAIN_DATA","POLYGON_CHAIN_DATA","ProductDataUI","tokenDataProps","children","tokenData","setReferral","history","params","URLSearchParams","location","search","value","get","chain","netAssetValueReducer","netAssetValue","component","parseFloat","totalPriceUsd","getNetAssetValue","components","reduce","isAvailableOnCurrentChain","chainId","token","polygonAddress","length","address","getBuySellWrapper","tokenSelector","symbol","IndexToken","latestVolume","latestMarketCap","fees","supplyCap","currentSupply","latestPrice","balance","prices","hourlyPrices"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\n\nimport { Container, InputProps } from 'react-neu'\nimport { useHistory } from 'react-router-dom'\n\nimport { BuySellWrapper } from 'components/BuySell'\nimport BuySellDisabled from 'components/BuySell/BuySellDisabled'\nimport MarketData from 'components/MarketData'\nimport Page from 'components/Page'\nimport {\n  IndexComponentsTable,\n  PriceChanges,\n  ProductPageContent,\n  ProductPageHeader,\n  TokenStats,\n  WalletBalance,\n} from 'components/ProductPage'\nimport { WalkerToken, ProductToken } from 'constants/productTokens'\nimport { SetComponent } from 'contexts/SetComponents/SetComponent'\nimport useChainData from 'hooks/useChainData'\nimport useLocalStorage from 'hooks/useLocalStorage'\nimport BigNumber from 'utils/bignumber'\nimport { MAINNET_CHAIN_DATA, POLYGON_CHAIN_DATA } from 'utils/connectors'\n\nexport interface TokenDataProps {\n  prices: number[][] | undefined\n  hourlyPrices: number[][] | undefined\n  latestPrice: number | undefined\n  latestMarketCap: number | undefined\n  latestVolume: number | undefined\n  token: ProductToken\n  components: SetComponent[] | undefined\n  balance: BigNumber | undefined\n  supplyCap?: BigNumber | undefined\n  currentSupply?: BigNumber | undefined\n}\n\ninterface ProductDataUIProps extends InputProps {\n  tokenDataProps: TokenDataProps\n}\n\nconst ProductDataUI: React.FC<ProductDataUIProps> = ({\n  tokenDataProps,\n  children,\n}) => {\n  const tokenData = tokenDataProps\n  const [, setReferral] = useLocalStorage('referral', '')\n  const history = useHistory()\n  const params = new URLSearchParams(history.location.search)\n  const value = params.get('referral')\n  const { chain } = useChainData()\n\n  useEffect(() => {\n    if (value) setReferral(value)\n  }, [value, setReferral])\n\n  const netAssetValueReducer = (\n    netAssetValue: number,\n    component: SetComponent\n  ): number => {\n    return netAssetValue + (parseFloat(component.totalPriceUsd) || 0)\n  }\n\n  const getNetAssetValue = () => {\n    return tokenData.components\n      ? tokenData.components.reduce(netAssetValueReducer, 0)\n      : 0\n  }\n\n  /**\n   * determines if the token is available on the current chain\n   */\n  const isAvailableOnCurrentChain = () => {\n    return (\n      (chain.chainId === POLYGON_CHAIN_DATA.chainId &&\n        tokenData.token.polygonAddress &&\n        tokenData.token.polygonAddress.length > 0) ||\n      (chain.chainId === MAINNET_CHAIN_DATA.chainId &&\n        tokenData.token.address &&\n        tokenData.token.address.length > 0)\n    )\n  }\n\n  /**\n   * determines whether or not to show BuySellWrapper for current token/chain combo\n   * @returns\n   */\n  const getBuySellWrapper = () => {\n    if (isAvailableOnCurrentChain())\n      return (\n        <div>\n          <BuySellWrapper tokenId={tokenData.token.tokenSelector} />\n        </div>\n      )\n    return <BuySellDisabled tokenData={tokenData} />\n  }\n\n  return (\n    <Page>\n      <Container size='lg'>\n        <ProductPageHeader>\n          <MarketData tokenData={tokenData} />\n          {getBuySellWrapper()}\n        </ProductPageHeader>\n        <ProductPageContent>\n          {tokenData.token.symbol !== IndexToken.symbol && (\n            <TokenStats\n              latestVolume={tokenData.latestVolume}\n              latestMarketCap={tokenData.latestMarketCap}\n              fees={tokenData.token.fees}\n              supplyCap={tokenData.supplyCap}\n              netAssetValue={getNetAssetValue()}\n              currentSupply={tokenData.currentSupply}\n            />\n          )}\n          <WalletBalance\n            token={tokenData.token}\n            latestPrice={tokenData.latestPrice}\n            currentBalance={tokenData.balance}\n          />\n          <PriceChanges\n            prices={tokenData.prices}\n            hourlyPrices={tokenData.hourlyPrices}\n          />\n          {tokenData.components && (\n            <IndexComponentsTable components={tokenData.components} />\n          )}\n        </ProductPageContent>\n      </Container>\n    </Page>\n  )\n}\n\nexport default ProductDataUI\n"]},"metadata":{},"sourceType":"module"}