{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/appwebsite/src/components/MarketData/MarketData.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport numeral from 'numeral';\nimport styled from 'styled-components';\nimport { MetaData } from 'components/ProductPage';\nimport SimplePriceChart from 'components/SimplePriceChart';\nimport { PriceChartRangeOption } from 'constants/priceChartEnums';\nimport { WalkerToken } from 'constants/productTokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketData = ({\n  tokenData\n}) => {\n  _s();\n\n  var _tokenData$prices, _tokenData$prices$sli, _tokenData$hourlyPric, _tokenData$hourlyPric2, _tokenData$prices2, _tokenData$hourlyPric3;\n\n  const [chartPrice, setChartPrice] = useState(0);\n  const [chartDate, setChartDate] = useState(Date.now());\n  const [chartRange, setChartRange] = useState(PriceChartRangeOption.MONTHLY_PRICE_RANGE); //default 30 since default chart is 1M\n\n  const [dateString, setDateString] = useState(new Date(Date.now()).toDateString());\n  useEffect(() => {\n    if (tokenData.latestPrice) setChartPrice(tokenData.latestPrice || 0);\n  }, [tokenData]);\n  const priceAtEpochStart = ((_tokenData$prices = tokenData.prices) === null || _tokenData$prices === void 0 ? void 0 : (_tokenData$prices$sli = _tokenData$prices.slice(-chartRange)[0]) === null || _tokenData$prices$sli === void 0 ? void 0 : _tokenData$prices$sli[1]) || 1;\n  const hourlyPriceAtEpochStart = ((_tokenData$hourlyPric = tokenData.hourlyPrices) === null || _tokenData$hourlyPric === void 0 ? void 0 : (_tokenData$hourlyPric2 = _tokenData$hourlyPric.slice(-24)[0]) === null || _tokenData$hourlyPric2 === void 0 ? void 0 : _tokenData$hourlyPric2[1]) || 1;\n  const startingPrice = chartRange > PriceChartRangeOption.DAILY_PRICE_RANGE ? priceAtEpochStart : hourlyPriceAtEpochStart;\n  const epochPriceChange = (chartPrice || 0) - startingPrice;\n\n  const updateChartPrice = chartData => {\n    var _chartData$activePayl, _chartData$activePayl2;\n\n    const payload = (chartData === null || chartData === void 0 ? void 0 : (_chartData$activePayl = chartData.activePayload) === null || _chartData$activePayl === void 0 ? void 0 : (_chartData$activePayl2 = _chartData$activePayl[0]) === null || _chartData$activePayl2 === void 0 ? void 0 : _chartData$activePayl2.payload) || {};\n    setTimeout(() => {\n      setChartPrice(payload.y || 0);\n      setChartDate(payload.x || Date.now());\n\n      if (chartRange === PriceChartRangeOption.DAILY_PRICE_RANGE) {\n        setDateString(priceDate.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: 'numeric'\n        }));\n      } else {\n        setDateString(priceDate.toDateString());\n      }\n    }, 0);\n  };\n\n  const resetChartPrice = () => {\n    setTimeout(() => {\n      setChartPrice(tokenData.latestPrice || 0);\n      setChartDate(Date.now());\n\n      if (chartRange === PriceChartRangeOption.DAILY_PRICE_RANGE) {\n        setDateString(priceDate.toLocaleTimeString([], {\n          hour: 'numeric',\n          minute: 'numeric'\n        }));\n      } else {\n        setDateString(priceDate.toDateString());\n      }\n    }, 0);\n  };\n\n  const priceDate = new Date(chartDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledIconLabel, {\n      children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n        src: tokenData.token.image,\n        alt: tokenData.token.symbol + ' Logo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-cy\": \"token-symbol\",\n        children: tokenData.token.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTitle, {\n      \"data-cy\": \"token-name\",\n      children: tokenData.token.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), tokenData.token.symbol !== WalkerToken.symbol && /*#__PURE__*/_jsxDEV(MetaData, {\n      tokenData: tokenData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPriceWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(StyledPrice, {\n        children: '$' + numeral(chartPrice).format('0.00a')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledPriceChange, {\n        isLoss: epochPriceChange < 0,\n        children: numeral(epochPriceChange / startingPrice * 100).format('0.00a') + '%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimplePriceChart, {\n      icon: {\n        src: tokenData.token.image,\n        alt: tokenData.token.symbol + ' Logo'\n      },\n      data: (_tokenData$prices2 = tokenData.prices) === null || _tokenData$prices2 === void 0 ? void 0 : _tokenData$prices2.map(([x, y]) => ({\n        x,\n        y\n      })),\n      hourlyData: (_tokenData$hourlyPric3 = tokenData.hourlyPrices) === null || _tokenData$hourlyPric3 === void 0 ? void 0 : _tokenData$hourlyPric3.map(([x, y]) => ({\n        x,\n        y\n      })),\n      onMouseMove: updateChartPrice,\n      onMouseLeave: resetChartPrice,\n      setChartRange: setChartRange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MarketData, \"BJkO9QRE/E0xq4iITBr4qUPBtg4=\");\n\n_c = MarketData;\nconst StyledTitle = styled.div`\n  font-size: 32px;\n  font-weight: 600;\n`;\n_c2 = StyledTitle;\nconst StyledIconLabel = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n_c3 = StyledIconLabel;\nconst StyledPriceWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin: 10px 0 10px 0;\n  @media (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n_c4 = StyledPriceWrapper;\nconst StyledPrice = styled.span`\n  font-size: 36px;\n  margin-right: 10px;\n  line-height: 1;\n`;\n_c5 = StyledPrice;\nconst StyledPriceChange = styled.span`\n  font-size: 24px;\n  color: ${props => props.isLoss ? '#ff4a4a' : '#03c75e'};\n`;\n_c6 = StyledPriceChange;\nconst StyledIcon = styled.img`\n  height: 34px;\n  text-align: center;\n  min-width: 34px;\n  margin-right: 5px;\n`;\n_c7 = StyledIcon;\nexport default MarketData;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"MarketData\");\n$RefreshReg$(_c2, \"StyledTitle\");\n$RefreshReg$(_c3, \"StyledIconLabel\");\n$RefreshReg$(_c4, \"StyledPriceWrapper\");\n$RefreshReg$(_c5, \"StyledPrice\");\n$RefreshReg$(_c6, \"StyledPriceChange\");\n$RefreshReg$(_c7, \"StyledIcon\");","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/appwebsite/src/components/MarketData/MarketData.tsx"],"names":["React","useEffect","useState","numeral","styled","MetaData","SimplePriceChart","PriceChartRangeOption","WalkerToken","MarketData","tokenData","chartPrice","setChartPrice","chartDate","setChartDate","Date","now","chartRange","setChartRange","MONTHLY_PRICE_RANGE","dateString","setDateString","toDateString","latestPrice","priceAtEpochStart","prices","slice","hourlyPriceAtEpochStart","hourlyPrices","startingPrice","DAILY_PRICE_RANGE","epochPriceChange","updateChartPrice","chartData","payload","activePayload","setTimeout","y","x","priceDate","toLocaleTimeString","hour","minute","resetChartPrice","token","image","symbol","name","format","src","alt","map","StyledTitle","div","StyledIconLabel","StyledPriceWrapper","StyledPrice","span","StyledPriceChange","props","isLoss","StyledIcon","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { InputProps } from 'react-neu'\n\nimport numeral from 'numeral'\nimport styled from 'styled-components'\n\nimport { MetaData } from 'components/ProductPage'\nimport { TokenDataProps } from 'components/ProductPage/ProductDataUI'\nimport SimplePriceChart from 'components/SimplePriceChart'\nimport { PriceChartRangeOption } from 'constants/priceChartEnums'\nimport { WalkerToken } from 'constants/productTokens'\n\ninterface MarketDataProps extends InputProps {\n  tokenData: TokenDataProps\n}\n\nconst MarketData: React.FC<MarketDataProps> = ({ tokenData }) => {\n  const [chartPrice, setChartPrice] = useState<number>(0)\n  const [chartDate, setChartDate] = useState<number>(Date.now())\n  const [chartRange, setChartRange] = useState<number>(\n    PriceChartRangeOption.MONTHLY_PRICE_RANGE\n  ) //default 30 since default chart is 1M\n  const [dateString, setDateString] = useState<String>(\n    new Date(Date.now()).toDateString()\n  )\n\n  useEffect(() => {\n    if (tokenData.latestPrice) setChartPrice(tokenData.latestPrice || 0)\n  }, [tokenData])\n\n  const priceAtEpochStart = tokenData.prices?.slice(-chartRange)[0]?.[1] || 1\n  const hourlyPriceAtEpochStart =\n    tokenData.hourlyPrices?.slice(-24)[0]?.[1] || 1\n  const startingPrice =\n    chartRange > PriceChartRangeOption.DAILY_PRICE_RANGE\n      ? priceAtEpochStart\n      : hourlyPriceAtEpochStart\n  const epochPriceChange = (chartPrice || 0) - startingPrice\n\n  const updateChartPrice = (chartData: any) => {\n    const payload = chartData?.activePayload?.[0]?.payload || {}\n\n    setTimeout(() => {\n      setChartPrice(payload.y || 0)\n      setChartDate(payload.x || Date.now())\n\n      if (chartRange === PriceChartRangeOption.DAILY_PRICE_RANGE) {\n        setDateString(\n          priceDate.toLocaleTimeString([], {\n            hour: 'numeric',\n            minute: 'numeric',\n          })\n        )\n      } else {\n        setDateString(priceDate.toDateString())\n      }\n    }, 0)\n  }\n\n  const resetChartPrice = () => {\n    setTimeout(() => {\n      setChartPrice(tokenData.latestPrice || 0)\n      setChartDate(Date.now())\n\n      if (chartRange === PriceChartRangeOption.DAILY_PRICE_RANGE) {\n        setDateString(\n          priceDate.toLocaleTimeString([], {\n            hour: 'numeric',\n            minute: 'numeric',\n          })\n        )\n      } else {\n        setDateString(priceDate.toDateString())\n      }\n    }, 0)\n  }\n\n  const priceDate = new Date(chartDate)\n\n  return (\n    <div>\n      <StyledIconLabel>\n        <StyledIcon\n          src={tokenData.token.image}\n          alt={tokenData.token.symbol + ' Logo'}\n        />\n        <span data-cy='token-symbol'>{tokenData.token.symbol}</span>\n      </StyledIconLabel>\n      <StyledTitle data-cy='token-name'>{tokenData.token.name}</StyledTitle>\n      {tokenData.token.symbol !== WalkerToken.symbol && (\n        <MetaData tokenData={tokenData} />\n      )}\n      <p>{dateString}</p>\n      <StyledPriceWrapper>\n        <StyledPrice>{'$' + numeral(chartPrice).format('0.00a')}</StyledPrice>\n        <StyledPriceChange isLoss={epochPriceChange < 0}>\n          {numeral((epochPriceChange / startingPrice) * 100).format('0.00a') +\n            '%'}\n        </StyledPriceChange>\n      </StyledPriceWrapper>\n      <SimplePriceChart\n        icon={{\n          src: tokenData.token.image,\n          alt: tokenData.token.symbol + ' Logo',\n        }}\n        data={tokenData.prices?.map(([x, y]) => ({ x, y }))}\n        hourlyData={tokenData.hourlyPrices?.map(([x, y]) => ({ x, y }))}\n        onMouseMove={updateChartPrice}\n        onMouseLeave={resetChartPrice}\n        setChartRange={setChartRange}\n      />\n    </div>\n  )\n}\n\nconst StyledTitle = styled.div`\n  font-size: 32px;\n  font-weight: 600;\n`\n\nconst StyledIconLabel = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`\n\nconst StyledPriceWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin: 10px 0 10px 0;\n  @media (max-width: 767px) {\n    flex-direction: column;\n  }\n`\n\nconst StyledPrice = styled.span`\n  font-size: 36px;\n  margin-right: 10px;\n  line-height: 1;\n`\n\nconst StyledPriceChange = styled.span`\n  font-size: 24px;\n  color: ${(props: { isLoss: boolean }) =>\n    props.isLoss ? '#ff4a4a' : '#03c75e'};\n`\n\nconst StyledIcon = styled.img`\n  height: 34px;\n  text-align: center;\n  min-width: 34px;\n  margin-right: 5px;\n`\n\nexport default MarketData\n"]},"metadata":{},"sourceType":"module"}